// –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
class FenomenVernostiApp {
    constructor() {
        this.currentTheme = 'light';
        this.currentSection = 'about';
        this.isMenuOpen = false;
        this.lastScrollY = 0;
        this.isReadingMode = false;
        this.testAnswers = [];
        this.currentChapter = 1;
        this.totalChapters = 11;
        
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.setupHidingHeader();
        this.restoreUserPreferences();
        this.setupScrollProgress();
        this.showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏"!', 'info');
        
        console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏" –∑–∞–ø—É—â–µ–Ω–æ');
    }

    // ==================== –¢–ê–ô–ú–õ–ê–ô–ù ====================
    showTimelineDetail(year) {
        const timelineData = {
            2014: {
                title: "2014 –≥–æ–¥ - –ù–∞—á–∞–ª–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞",
                description: "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è 2014 –≥–æ–¥–∞, –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª–æ—Å—å –Ω–∞—Ä–æ–¥–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –≤ –î–æ–Ω–±–∞—Å—Å–µ.",
                heroes: {
                    zaharchenko: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –∞–∫—Ç–∏–≤–Ω–æ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ–±–æ—Ä–æ–Ω—ã –î–æ–Ω–µ—Ü–∫–∞, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ª–∏–¥–µ—Ä–æ–≤ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –æ–ø–æ–ª—á–µ–Ω–∏—è. –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –¥–µ–π—Å—Ç–≤–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π.",
                    motorola: "–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ –ø—Ä–∏–±—ã–≤–∞–µ—Ç –≤ –î–æ–Ω–±–∞—Å—Å –≤ –∞–≤–≥—É—Å—Ç–µ 2014 –≥–æ–¥–∞. –£—á–∞—Å—Ç–≤—É–µ—Ç –≤ –ø–µ—Ä–≤—ã—Ö –±–æ—è—Ö –∑–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤, –ø—Ä–æ—è–≤–ª—è–µ—Ç —Å–µ–±—è –∫–∞–∫ —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –∏ —Å–º–µ–ª—ã–π –∫–æ–º–∞–Ω–¥–∏—Ä.",
                    givi: "–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö –±–µ—Ä–µ—Ç –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Ä–æ–¥–Ω–æ–≥–æ –ò–ª–æ–≤–∞–π—Å–∫–∞. –£—á–∞—Å—Ç–≤—É–µ—Ç –≤ —É–ª–∏—á–Ω—ã—Ö –±–æ—è—Ö, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –º–µ—Å—Ç–Ω–æ–π –æ–±–æ—Ä–æ–Ω—ã."
                }
            },
            2015: {
                title: "2015 –≥–æ–¥ - –ë–æ–∏ –∑–∞ –î–æ–Ω–µ—Ü–∫",
                description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ –±–æ–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤–æ–∫—Ä—É–≥ –î–æ–Ω–µ—Ü–∫–∞ –∏ –∫–ª—é—á–µ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.",
                heroes: {
                    zaharchenko: "–í–æ–∑–≥–ª–∞–≤–ª—è–µ—Ç –æ–±–æ—Ä–æ–Ω—É –î–æ–Ω–µ—Ü–∫–∞, –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π. –£—á–∞—Å—Ç–≤—É–µ—Ç –≤ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞—Ö –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –∂–∏–∑–Ω–∏ –≤ —É—Å–ª–æ–≤–∏—è—Ö –±–ª–æ–∫–∞–¥—ã.",
                    motorola: "–ö–æ–º–∞–Ω–¥—É–µ—Ç –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º '–°–ø–∞—Ä—Ç–∞' –≤ –±–æ—è—Ö –∑–∞ –¥–æ–Ω–µ—Ü–∫–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç. –°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
                    givi: "–£—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ç—è–∂–µ–ª—ã—Ö –±–æ—è—Ö –∑–∞ –î–µ–±–∞–ª—å—Ü–µ–≤–æ, –∫–æ–º–∞–Ω–¥—É–µ—Ç –æ–±–æ—Ä–æ–Ω–æ–π –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∑–∏—Ü–∏–π. –ï–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ '–°–æ–º–∞–ª–∏' —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –±–æ–µ—Å–ø–æ—Å–æ–±–Ω—ã—Ö."
                }
            },
            2016: {
                title: "2016-2017 - –ì–∏–±–µ–ª—å –≥–µ—Ä–æ–µ–≤",
                description: "–¢—Ä–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, —É–Ω–µ—Å—à–∏–µ –∂–∏–∑–Ω–∏ –ú–æ—Ç–æ—Ä–æ–ª—ã –∏ –ì–∏–≤–∏.",
                heroes: {
                    zaharchenko: "–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç—å —Ä–µ—Å–ø—É–±–ª–∏–∫–æ–π –≤ —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–µ–≥–æ—Å—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞. –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –º–∏—Ä–Ω–æ–π –∂–∏–∑–Ω–∏.",
                    motorola: "16 –æ–∫—Ç—è–±—Ä—è 2016 –≥–æ–¥–∞ –ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ –ø–æ–≥–∏–±–∞–µ—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞ –≤ –ø–æ–¥—ä–µ–∑–¥–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ–º–∞. –ï–≥–æ –≥–∏–±–µ–ª—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø–æ—Ç—Ä—è—Å–µ–Ω–∏–µ–º –¥–ª—è –≤—Å–µ–≥–æ –î–æ–Ω–±–∞—Å—Å–∞.",
                    givi: "8 —Ñ–µ–≤—Ä–∞–ª—è 2017 –≥–æ–¥–∞ –ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö –ø–æ–≥–∏–±–∞–µ—Ç –æ—Ç —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞–Ω–µ–Ω–∏—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–±—Å—Ç—Ä–µ–ª–∞. –ï–≥–æ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ—Ç–∞ —Å–¥–µ–ª–∞–ª–∏ –µ–≥–æ –Ω–∞—Ä–æ–¥–Ω—ã–º –≥–µ—Ä–æ–µ–º."
                }
            },
            2018: {
                title: "2018 –≥–æ–¥ - –ì–∏–±–µ–ª—å –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ",
                description: "–¢–µ—Ä–∞–∫—Ç –≤ –î–æ–Ω–µ—Ü–∫–µ –∏ –≥–∏–±–µ–ª—å –ø–µ—Ä–≤–æ–≥–æ –≥–ª–∞–≤—ã –î–ù–†.",
                heroes: {
                    zaharchenko: "31 –∞–≤–≥—É—Å—Ç–∞ 2018 –≥–æ–¥–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –ø–æ–≥–∏–±–∞–µ—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤–∑—Ä—ã–≤–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –î–æ–Ω–µ—Ü–∫–∞. –ï–≥–æ —Å–º–µ—Ä—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–≥—Ä–æ–º–Ω–æ–π –ø–æ—Ç–µ—Ä–µ–π –¥–ª—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∏.",
                    motorola: "–ö —ç—Ç–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –ú–æ—Ç–æ—Ä–æ–ª–∞ —É–∂–µ —Å—Ç–∞–ª –ª–µ–≥–µ–Ω–¥–æ–π –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è, –µ–≥–æ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –±–æ–π—Ü–æ–≤.",
                    givi: "–ü–∞–º—è—Ç—å –æ –ì–∏–≤–∏ –∂–∏–≤–µ—Ç –≤ —Å–µ—Ä–¥—Ü–∞—Ö –ª—é–¥–µ–π, –µ–≥–æ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å —Ä–æ–¥–Ω–æ–π –∑–µ–º–ª–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–º–µ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–∏—Ö."
                }
            },
            2022: {
                title: "2022-2025 - –ù–æ–≤—ã–π —ç—Ç–∞–ø",
                description: "–≠—Å–∫–∞–ª–∞—Ü–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞.",
                heroes: {
                    zaharchenko: "–ù–∞—Å–ª–µ–¥–∏–µ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –Ω–æ–≤—ã—Ö –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤. –ï–≥–æ –ø—Ä–∏–Ω—Ü–∏–ø—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≤–µ—Ä–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏.",
                    motorola: "–§–µ–Ω–æ–º–µ–Ω '–ú–æ—Ç–æ—Ä–æ–ª—ã' –∏–∑—É—á–∞–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–∏–º–µ—Ä —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç–∏ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.",
                    givi: "–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –ì–∏–≤–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è —Å–∏–º–≤–æ–ª–∞–º–∏ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è."
                }
            }
        };

        const data = timelineData[year];
        if (data) {
            const timelineBody = document.getElementById('timelineBody');
            timelineBody.innerHTML = `
                <div class="timeline-detail">
                    <h2>${data.title}</h2>
                    <p>${data.description}</p>
                    
                    <div class="timeline-heroes">
                        <div class="timeline-hero">
                            <h4>üè¥ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ</h4>
                            <p>${data.heroes.zaharchenko}</p>
                        </div>
                        <div class="timeline-hero">
                            <h4>üè¥ –ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ "–ú–æ—Ç–æ—Ä–æ–ª–∞"</h4>
                            <p>${data.heroes.motorola}</p>
                        </div>
                        <div class="timeline-hero">
                            <h4>üè¥ –ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö "–ì–∏–≤–∏"</h4>
                            <p>${data.heroes.givi}</p>
                        </div>
                    </div>
                </div>
            `;
            this.openModal('timelineModal');
        }
    }

    // ==================== –ì–õ–ê–í–´ –ö–ù–ò–ì–ò ====================
    openChapter(chapterNumber) {
        this.currentChapter = chapterNumber;
        
        const chapterContent = `
            <div class="chapter-content">
                <h2>–ì–ª–∞–≤–∞ ${chapterNumber}</h2>
                <div class="chapter-placeholder" style="text-align: center; padding: 3rem;">
                    <div style="font-size: 4rem; margin-bottom: 1rem;">üìñ</div>
                    <h3>–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è —Ç–µ–∫—Å—Ç –≤—Å–µ–π –≥–ª–∞–≤—ã</h3>
                    <p>–ú—ã –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∫–Ω–∏–≥–∏. –¢–µ–∫—Å—Ç —ç—Ç–æ–π –≥–ª–∞–≤—ã –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
                </div>
            </div>
        `;
        
        const modalBody = document.getElementById('modalBody');
        const chapterTitle = document.getElementById('currentChapterTitle');
        
        chapterTitle.textContent = `–ì–ª–∞–≤–∞ ${chapterNumber}`;
        modalBody.innerHTML = chapterContent;
        
        this.updateChapterProgress();
        this.updateNavigationButtons();
        this.openModal('chapterModal');
    }

    // ==================== –†–ï–ô–¢–ò–ù–ì ====================
    setRating(rating) {
        const stars = document.querySelectorAll('.star');
        stars.forEach((star, index) => {
            if (index < rating) {
                star.classList.add('active');
            } else {
                star.classList.remove('active');
            }
        });
        
        this.saveRating(rating);
        this.showNotification(`–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É ${rating} –∑–≤–µ–∑–¥!`, 'success');
    }

    saveRating(rating) {
        let ratings = JSON.parse(localStorage.getItem('bookRatings') || '[]');
        ratings.push({
            rating: rating,
            date: new Date().toISOString()
        });
        
        localStorage.setItem('bookRatings', JSON.stringify(ratings));
        this.updateRatingDisplay();
    }

    updateRatingDisplay() {
        const ratings = JSON.parse(localStorage.getItem('bookRatings') || '[]');
        
        if (ratings.length > 0) {
            const total = ratings.reduce((sum, item) => sum + item.rating, 0);
            const average = (total / ratings.length).toFixed(1);
            const count = ratings.length;
            
            document.getElementById('averageRating').textContent = average;
            document.getElementById('ratingCount').textContent = count;
        } else {
            document.getElementById('averageRating').textContent = '0.0';
            document.getElementById('ratingCount').textContent = '0';
        }
    }

    // ==================== –¢–ï–°–¢ ====================
    analyzeTestResults() {
        const results = [
            {
                type: "–ß–µ–ª–æ–≤–µ–∫ –≤–µ—Ä–Ω–æ—Å—Ç–∏",
                value: "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥",
                description: "–í—ã —Å—Ç–∞–≤–∏—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –∏–¥–µ–∞–ª–∞–º –∏ –±–ª–∏–∑–∫–∏–º –≤—ã—à–µ –ª–∏—á–Ω–æ–π –≤—ã–≥–æ–¥—ã –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞. –í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω—ã –Ω–∞ —Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–∞–¥–∏ –∑–∞—â–∏—Ç—ã —Ç–æ–≥–æ, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç–µ –≤–∞–∂–Ω—ã–º.",
                traits: ["–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏–¥–µ–∞–ª–∞–º", "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—é", "–ù–µ–ø–æ–∫–æ–ª–µ–±–∏–º–æ—Å—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤"],
                hero: {
                    name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ",
                    similarity: "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç"
                }
            },
            {
                type: "–ü—Ä–∞–≥–º–∞—Ç–∏—á–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫", 
                value: "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –¥–µ–π—Å—Ç–≤–∏–µ",
                description: "–í—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É–µ—Ç–µ—Å—å —Ä–∞–∑—É–º–æ–º –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–ª—å–∑–æ–π. –£–º–µ–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –≤–∑–≤–µ—à–∏–≤–∞—è –≤—Å–µ –∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤.",
                traits: ["–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "–ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å", "–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"],
                hero: {
                    name: "–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ '–ú–æ—Ç–æ—Ä–æ–ª–∞'",
                    similarity: "–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö"
                }
            },
            {
                type: "–ó–∞—â–∏—Ç–Ω–∏–∫ —Å–µ–º—å–∏",
                value: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å", 
                description: "–í–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –∑–∞—â–∏—Ç–∞ –±–ª–∏–∑–∫–∏—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã. –í—ã –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫.",
                traits: ["–ó–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç—å", "–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å", "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"]
            },
            {
                type: "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π –±–æ–µ—Ü",
                value: "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–≤–¥–∞",
                description: "–î–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–∏—Ä–∏—Ç—å—Å—è —Å –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å—é –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç—Å—Ç–∞–∏–≤–∞—Ç—å –ø—Ä–∞–≤–¥—É.",
                traits: ["–ß–µ—Å—Ç–Ω–æ—Å—Ç—å", "–ü—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ—Å—Ç—å", "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å"],
                hero: {
                    name: "–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö '–ì–∏–≤–∏'",
                    similarity: "–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ—Ç—Å—Ç–∞–∏–≤–∞–Ω–∏–∏ –ø—Ä–∞–≤–¥—ã"
                }
            }
        ];
        
        const randomIndex = Math.floor(Math.random() * results.length);
        return results[randomIndex];
    }

    // ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================
    setupEventListeners() {
        this.setupSmoothScroll();
        this.setupContactForm();
        
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') this.closeAllModals();
        });

        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('modal')) {
                this.closeAllModals();
            }
        });
    }

    setupHidingHeader() {
        const header = document.getElementById('mainHeader');
        let lastScroll = 0;
        
        const handleScroll = () => {
            const currentScroll = window.pageYOffset;
            
            if (currentScroll > 100) {
                if (currentScroll > lastScroll && currentScroll > 300) {
                    header.classList.add('hidden');
                } else {
                    header.classList.remove('hidden');
                }
            } else {
                header.classList.remove('hidden');
            }
            
            lastScroll = currentScroll;
        };

        const throttledScroll = this.throttle(handleScroll, 100);
        window.addEventListener('scroll', throttledScroll, { passive: true });
    }

    setupScrollProgress() {
        const progressElement = document.getElementById('readingProgress');
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');
        
        if (progressElement && progressFill && progressText) {
            const updateProgress = () => {
                const windowHeight = window.innerHeight;
                const documentHeight = document.documentElement.scrollHeight;
                const scrollTop = window.pageYOffset;
                
                const progress = (scrollTop / (documentHeight - windowHeight)) * 100;
                const roundedProgress = Math.round(progress);
                
                progressFill.style.height = `${progress}%`;
                progressText.textContent = `${roundedProgress}%`;
                
                if (scrollTop > 200) {
                    progressElement.classList.add('active');
                } else {
                    progressElement.classList.remove('active');
                }
            };

            const throttledProgress = this.throttle(updateProgress, 100);
            window.addEventListener('scroll', throttledProgress, { passive: true });
        }
    }

    toggleTheme() {
        this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        document.body.setAttribute('data-theme', this.currentTheme);
        localStorage.setItem('theme', this.currentTheme);
        this.updateThemeIcon();
        
        const themeName = this.currentTheme === 'dark' ? '—Ç—ë–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é';
        this.showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${themeName}`, 'info');
    }

    updateThemeIcon() {
        const themeIcon = document.querySelector('.theme-icon');
        if (themeIcon) {
            themeIcon.textContent = this.currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    }

    toggleMenu() {
        const burger = document.querySelector('.burger-menu');
        const nav = document.querySelector('nav');
        
        this.isMenuOpen = !this.isMenuOpen;
        burger.classList.toggle('active');
        nav.classList.toggle('active');
    }

    setupSmoothScroll() {
        const links = document.querySelectorAll('a[href^="#"]');
        
        links.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = link.getAttribute('href').substring(1);
                this.scrollToSection(targetId);
                
                if (this.isMenuOpen) {
                    this.closeMenu();
                }
            });
        });
    }

    scrollToSection(sectionId) {
        const element = document.getElementById(sectionId);
        if (element) {
            const headerHeight = 120;
            const targetPosition = element.offsetTop - headerHeight;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });
        }
    }

    toggleReadingMode() {
        this.isReadingMode = !this.isReadingMode;
        document.body.classList.toggle('reading-mode', this.isReadingMode);
        
        if (this.isReadingMode) {
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω', 'info');
        } else {
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω', 'info');
        }
    }

    openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }
    }

    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    }

    closeAllModals() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.style.display = 'none';
        });
        document.body.style.overflow = 'auto';
    }

    showHeroDetail(heroId) {
        const heroes = {
            zaharchenko: {
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ',
                years: '1976-2018',
                role: '–ü–µ—Ä–≤—ã–π –≥–ª–∞–≤–∞ –î–æ–Ω–µ—Ü–∫–æ–π –ù–∞—Ä–æ–¥–Ω–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏',
                bio: '–†–æ–¥–∏–ª—Å—è 26 –∏—é–Ω—è 1976 –≥–æ–¥–∞ –≤ –î–æ–Ω–µ—Ü–∫–µ. –ü—Ä–æ—à—ë–ª –ø—É—Ç—å –æ—Ç —à–∞—Ö—Ç—ë—Ä–∞ –¥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∏. –†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –∏–º–µ–Ω–∏ –ó–∞—Å—è–¥—å–∫–æ, —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–±–æ—Ä–æ–Ω–µ –î–æ–Ω–µ—Ü–∫–∞ —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞. –ë—ã–ª –∏–∑–±—Ä–∞–Ω –≥–ª–∞–≤–æ–π –î–ù–† –≤ 2014 –≥–æ–¥—É. –ü–æ–≥–∏–± 31 –∞–≤–≥—É—Å—Ç–∞ 2018 –≥–æ–¥–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞.',
                quotes: [
                    "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç.",
                    "–ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ—é –∑–µ–º–ª—é, —Å–≤–æ–∏ —Å–µ–º—å–∏, —Å–≤–æ—é –ø—Ä–∞–≤–¥—É.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ - –≤ –ø—Ä–∞–≤–¥–µ –∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –∏–º–µ–Ω–∏ –ó–∞—Å—è–¥—å–∫–æ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–±–æ—Ä–æ–Ω–µ –î–æ–Ω–µ—Ü–∫–∞ —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π",
                    "–ë—ã–ª –∏–∑–±—Ä–∞–Ω –≥–ª–∞–≤–æ–π –î–ù–† –≤ 2014 –≥–æ–¥—É",
                    "–ü–æ–≥–∏–± –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞ –≤ 2018 –≥–æ–¥—É"
                ],
                values: ["–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "–í–µ—Ä–Ω–æ—Å—Ç—å", "–°—Ç–æ–π–∫–æ—Å—Ç—å", "–ü–∞—Ç—Ä–∏–æ—Ç–∏–∑–º"]
            },
            motorola: {
                name: '–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ "–ú–æ—Ç–æ—Ä–æ–ª–∞"',
                years: '1983-2016', 
                role: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–ø–∞—Ä—Ç–∞"',
                bio: '–†–æ–¥–∏–ª—Å—è 2 —Ñ–µ–≤—Ä–∞–ª—è 1983 –≥–æ–¥–∞ –≤ –£—Ö—Ç–µ. –ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É –≤ –º–æ—Ä—Å–∫–æ–π –ø–µ—Ö–æ—Ç–µ. –û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –æ–ø–æ–ª—á–µ–Ω–∏—è, –ø—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —É—á–∞—Å—Ç–∏–µ–º –≤ –±–æ—è—Ö –∑–∞ –¥–æ–Ω–µ—Ü–∫–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç. –°—Ç–∞–ª —Å–∏–º–≤–æ–ª–æ–º —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏ –≤–æ–ª–∏ –∫ –ø–æ–±–µ–¥–µ. –ü–æ–≥–∏–± 16 –æ–∫—Ç—è–±—Ä—è 2016 –≥–æ–¥–∞.',
                quotes: [
                    "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π.",
                    "–ú—ã –≤–æ—é–µ–º –∑–∞ –ø—Ä–∞–≤–¥—É, –∞ –ø—Ä–∞–≤–¥–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç.",
                    "–Ø –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—â–∏—â–∞–µ—Ç —Å–≤–æ–π –¥–æ–º."
                ],
                facts: [
                    "–ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É –≤ –º–æ—Ä—Å–∫–æ–π –ø–µ—Ö–æ—Ç–µ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —à—Ç—É—Ä–º–µ –¥–æ–Ω–µ—Ü–∫–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞", 
                    "–ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º ¬´–°–ø–∞—Ä—Ç–∞¬ª",
                    "–°—Ç–∞–ª –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ –æ–ø–æ–ª—á–µ–Ω–∏—è"
                ],
                values: ["–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–°–º–µ–ª–æ—Å—Ç—å", "–ü—Ä—è–º–æ—Ç–∞", "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å"]
            },
            givi: {
                name: '–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö "–ì–∏–≤–∏"',
                years: '1980-2017',
                role: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–æ–º–∞–ª–∏"', 
                bio: '–†–æ–¥–∏–ª—Å—è 19 –∏—é–ª—è 1980 –≥–æ–¥–∞ –≤ –ò–ª–æ–≤–∞–π—Å–∫–µ. –†–∞–±–æ—Ç–∞–ª –≤–æ–¥–∏—Ç–µ–ª–µ–º —Å 2011 –ø–æ 2014 –≥–æ–¥. –í –Ω–∞—á–∞–ª–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤–∑—è–ª –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Ä–æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —Å–≤–æ–∏–º–∏ –∏—Å–∫—Ä–µ–Ω–Ω–∏–º–∏ –≤–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ –∏ —É—á–∞—Å—Ç–∏–µ–º –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏—è—Ö. –ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –æ–±–æ—Ä–æ–Ω–æ–π –ò–ª–æ–≤–∞–π—Å–∫–∞. –ü–æ–≥–∏–± 8 —Ñ–µ–≤—Ä–∞–ª—è 2017 –≥–æ–¥–∞.',
                quotes: [
                    "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞.",
                    "–£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞, –∫—Ä–æ–º–µ –∫–∞–∫ –ø–æ–±–µ–¥–∏—Ç—å.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –º—ã –∑–∞—â–∏—â–∞–µ–º –ø—Ä–∞–≤–¥—É."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –≤–æ–¥–∏—Ç–µ–ª–µ–º —Å 2011 –ø–æ 2014 –≥–æ–¥",
                    "–ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –æ–±–æ—Ä–æ–Ω–æ–π –ò–ª–æ–≤–∞–π—Å–∫–∞",
                    "–í–æ–∑–≥–ª–∞–≤–∏–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ¬´–°–æ–º–∞–ª–∏¬ª", 
                    "–°—Ç–∞–ª —Å–∏–º–≤–æ–ª–æ–º —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π"
                ],
                values: ["–ü—Ä–æ—Å—Ç–æ—Ç–∞", "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å", "–ù–∞—Ä–æ–¥–Ω–æ—Å—Ç—å", "–í–µ—Ä–Ω–æ—Å—Ç—å –¥–æ–ª–≥—É"]
            }
        };
        
        const hero = heroes[heroId];
        if (hero) {
            const modalBody = document.getElementById('heroBody');
            modalBody.innerHTML = `
                <div class="hero-detail">
                    <div class="hero-header">
                        <h2>${hero.name}</h2>
                        <div class="hero-years">${hero.years}</div>
                        <div class="hero-role">${hero.role}</div>
                    </div>
                    
                    <div class="hero-bio">
                        <h3>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è</h3>
                        <p>${hero.bio}</p>
                    </div>
                    
                    <div class="hero-values">
                        <h3>–ö–ª—é—á–µ–≤—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏</h3>
                        <div class="values-grid">
                            ${hero.values.map(value => `
                                <span class="value-tag">${value}</span>
                            `).join('')}
                        </div>
                    </div>
                    
                    <div class="hero-quotes">
                        <h3>–ö–ª—é—á–µ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã</h3>
                        ${hero.quotes.map(quote => `
                            <blockquote>
                                <p>${quote}</p>
                            </blockquote>
                        `).join('')}
                    </div>
                    
                    <div class="hero-facts">
                        <h3>–§–∞–∫—Ç—ã</h3>
                        <ul>
                            ${hero.facts.map(fact => `<li>${fact}</li>`).join('')}
                        </ul>
                    </div>
                </div>
            `;
            this.openModal('heroModal');
        }
    }

    shareQuote(index) {
        const quotes = [
            "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç. - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ",
            "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π. - –ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ (¬´–ú–æ—Ç–æ—Ä–æ–ª–∞¬ª)",
            "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞. –£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞. - –ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö (¬´–ì–∏–≤–∏¬ª)"
        ];
        
        const quote = quotes[index];
        navigator.clipboard.writeText(quote).then(() => {
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
        });
    }

    addToFavorites(index) {
        let favorites = JSON.parse(localStorage.getItem('quoteFavorites') || '[]');
        if (!favorites.includes(index)) {
            favorites.push(index);
            localStorage.setItem('quoteFavorites', JSON.stringify(favorites));
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!', 'success');
        } else {
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!', 'info');
        }
    }

    prevChapter() {
        if (this.currentChapter > 1) {
            this.currentChapter--;
            this.openChapter(this.currentChapter);
        }
    }

    nextChapter() {
        if (this.currentChapter < this.totalChapters) {
            this.currentChapter++;
            this.openChapter(this.currentChapter);
        }
    }

    updateChapterProgress() {
        const progress = (this.currentChapter / this.totalChapters) * 100;
        const progressFill = document.getElementById('chapterProgressFill');
        if (progressFill) {
            progressFill.style.width = `${progress}%`;
        }
    }

    updateNavigationButtons() {
        const prevBtn = document.querySelector('.nav-button:first-child');
        const nextBtn = document.querySelector('.nav-button:last-child');
        
        if (prevBtn) {
            prevBtn.disabled = this.currentChapter === 1;
        }
        
        if (nextBtn) {
            nextBtn.disabled = this.currentChapter === this.totalChapters;
        }
    }

    startTest() {
        document.getElementById('testStart').style.display = 'none';
        document.getElementById('testQuestions').style.display = 'block';
        this.loadTestQuestions();
    }

    loadTestQuestions() {
        const questions = [
            {
                question: "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?",
                answers: [
                    "–í–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –ª–∏—á–Ω—ã–º –ø–æ—Ç–µ—Ä—è–º",
                    "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞", 
                    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ –±–ª–∏–∑–∫–∏—Ö –ª—é–¥–µ–π",
                    "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π"
                ]
            },
            {
                question: "–ö–∞–∫ –±—ã –≤—ã –ø–æ—Å—Ç—É–ø–∏–ª–∏, –µ—Å–ª–∏ –±—ã –ø—Ä–∏—à–ª–æ—Å—å –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–π –¥–æ–º –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–π —É–≥—Ä–æ–∑—ã?",
                answers: [
                    "–í–∑—è–ª –±—ã –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –±–µ–∑ —Ä–∞–∑–¥—É–º–∏–π, —á—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å —Ä–æ–¥–Ω—ã—Ö –∏ –∑–µ–º–ª—é",
                    "–ü–æ–ø—ã—Ç–∞–ª—Å—è –±—ã –Ω–∞–π—Ç–∏ –º–∏—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è",
                    "–£–µ—Ö–∞–ª –±—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ —Å —Å–µ–º—å—ë–π",
                    "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª –±—ã –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Å —Å–æ—Å–µ–¥—è–º–∏"
                ]
            }
        ];
        
        const container = document.getElementById('testQuestions');
        container.innerHTML = questions.map((q, index) => `
            <div class="question" id="question-${index}">
                <h3>–í–æ–ø—Ä–æ—Å ${index + 1} –∏–∑ ${questions.length}</h3>
                <p>${q.question}</p>
                <div class="answers">
                    ${q.answers.map((answer, ansIndex) => `
                        <div class="answer" onclick="app.selectAnswer(${index}, ${ansIndex})">
                            ${answer}
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('') + `
            <div class="test-actions">
                <button onclick="app.finishTest()" class="button primary">
                    –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç
                </button>
            </div>
        `;
        
        this.testAnswers = new Array(questions.length).fill(null);
    }

    selectAnswer(questionIndex, answerIndex) {
        const answers = document.querySelectorAll(`#question-${questionIndex} .answer`);
        answers.forEach((answer, index) => {
            answer.classList.toggle('selected', index === answerIndex);
        });
        
        this.testAnswers[questionIndex] = answerIndex;
    }

    finishTest() {
        document.getElementById('testQuestions').style.display = 'none';
        document.getElementById('testResult').style.display = 'block';
        
        const result = this.analyzeTestResults();
        
        document.getElementById('testResult').innerHTML = `
            <div class="result-header">
                <h3>–í–∞—à —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥</h3>
            </div>
            
            <div class="result-content">
                <div class="result-type">
                    <h4>–¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏:</h4>
                    <div class="type-badge">${result.type}</div>
                </div>
                
                <div class="result-value">
                    <h4>–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:</h4>
                    <p>${result.value}</p>
                </div>
                
                <div class="result-description">
                    <h4>–û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                    <p>${result.description}</p>
                </div>
                
                <div class="result-traits">
                    <h4>–•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —á–µ—Ä—Ç—ã:</h4>
                    <ul>
                        ${result.traits.map(trait => `<li>${trait}</li>`).join('')}
                    </ul>
                </div>
                
                ${result.hero ? `
                <div class="result-hero">
                    <h4>–ë–ª–∏–∂–∞–π—à–∏–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–æ–≥:</h4>
                    <div class="hero-match">
                        <strong>${result.hero.name}</strong> - ${result.hero.similarity}
                    </div>
                </div>
                ` : ''}
            </div>
            
            <div class="result-actions">
                <button onclick="app.restartTest()" class="button primary">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑</button>
            </div>
        `;
    }

    restartTest() {
        document.getElementById('testResult').style.display = 'none';
        document.getElementById('testStart').style.display = 'block';
        this.testAnswers = [];
    }

    setupContactForm() {
        const form = document.getElementById('feedbackForm');
        if (form) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.', 'success');
                form.reset();
            });
        }
    }

    showNotification(message, type = 'info') {
        const notification = document.getElementById('notification');
        if (notification) {
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }
    }

    throttle(func, limit) {
        let inThrottle;
        return function(...args) {
            if (!inThrottle) {
                func.apply(this, args);
                inThrottle = true;
                setTimeout(() => inThrottle = false, limit);
            }
        }
    }

    exportToPDF() {
        this.showNotification('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!', 'info');
    }

    startAudioBook() {
        this.showNotification('–ê—É–¥–∏–æ–≤–µ—Ä—Å–∏—è –∫–Ω–∏–≥–∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –≤—ã–ø—É—Å–∫—É!', 'info');
    }

    showPrivacyPolicy() {
        this.showNotification('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.', 'info');
    }

    exportUserData() {
        this.showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
    }

    clearProgress() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å?')) {
            localStorage.clear();
            this.showNotification('–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!', 'success');
        }
    }

    restoreUserPreferences() {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            this.currentTheme = savedTheme;
            document.body.setAttribute('data-theme', this.currentTheme);
            this.updateThemeIcon();
        }
        
        this.updateRatingDisplay();
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new FenomenVernostiApp();

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è HTML –∞—Ç—Ä–∏–±—É—Ç–æ–≤
window.app = app;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
    document.body.classList.add('loaded');
});
